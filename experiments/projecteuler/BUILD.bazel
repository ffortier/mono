load("@aspect_rules_deno//deno:defs.bzl", "deno_binary")
load("@rules_cc//cc:cc_binary.bzl", "cc_binary")
load("@rules_dotnet//dotnet:defs.bzl", "fsharp_binary")
load("@rules_prolog//:prolog_binary.bzl", "prolog_binary")

prolog_binary(
    name = "problem_89",
    srcs = ["problem_89.pl"],
    data = ["0089_roman.txt"],
    goal = "problem_89",
)

[
    deno_binary(
        name = ts_file.removesuffix(".ts"),
        main = ts_file,
    )
    for ts_file in glob(["*.ts"])
]

[
    cc_binary(
        name = c_file.removesuffix(".c"),
        srcs = [c_file],
        tags = ["windows"],
    )
    for c_file in glob(["*.c"])
]

[
    prolog_binary(
        name = pl_file.removesuffix(".pl"),
        srcs = [pl_file],
        goal = pl_file.removesuffix(".pl"),
    )
    for pl_file in glob(["*.pl"])
    if pl_file.removesuffix(".pl") not in existing_rules()
]

[
    fsharp_binary(
        name = fsharp_file.removesuffix(".fs"),
        srcs = [fsharp_file],
        tags = ["windows"],
        target_frameworks = ["net9.0"],
        deps = [
            "@paket.main//fsharp.core",
        ],
    )
    for fsharp_file in glob(["*.fs"])
]
