load("@hedron_compile_commands//:refresh_compile_commands.bzl", "refresh_compile_commands")
load("@pip//:requirements.bzl", "requirement")
load("@python_versions//3.13:defs.bzl", "py_console_script_binary")
load("@rules_prolog//:prolog_toolchain.bzl", "prolog_toolchain")
load("@rules_shell//shell:sh_binary.bzl", "sh_binary")

prolog_toolchain(
    name = "scryper_prolog",
    tool = "@crates//:scryer_prolog_bin",
)

toolchain(
    name = "scryper_prolog_toolchain",
    toolchain = ":scryper_prolog",
    toolchain_type = "@rules_prolog//:toolchain_type",
)

py_console_script_binary(
    name = "mkdocs",
    data = glob(["docs/**"]) + [
        "mkdocs.yml",
        "//docs/script",
        "//experiments/digital:docs",
        "//experiments/jasm:docs",
        "//experiments/nbmagic:docs",
        "//experiments/typescript-fun:docs",
    ],
    pkg = requirement("mkdocs"),
    deps = [
        requirement("mkdocs-material"),
        requirement("mkdocs-monorepo-plugin"),
    ],
)

refresh_compile_commands(
    name = "refresh_compile_commands",
    targets = {
        "//experiments/digital": "",
    },
)

sh_binary(
    name = "cwd",
    srcs = ["cwd.sh"],
)
