crate = use_extension("@rules_rust//crate_universe:extension.bzl", "crate")

crate.spec(
    package = "clap",
    version = "=4.5.41",
    features = ["derive"],
)

crate.spec(
    package = "reqwest",
    version = "=0.12.22",
    default_features = False,
    features = ["blocking", "rustls-tls", "http2", "charset"],
)

crate.spec(
    package = "anyhow",
    version = "=1.0.98",
)

crate.spec(
    package = "sha2",
    version = "=0.10.9",
)

crate.spec(
    package = "hex",
    version = "=0.4.3",
)

crate.spec(
    package = "thiserror",
    version = "=2.0.12",
)

crate.spec(
    package = "termion",
    version = "=4.0.5",
)

crate.spec(
    package = "rustls",
    version = "=0.23.30",
    default_features = False,
    features = ["logging", "tls12"],
)

crate.spec(
    package = "byteorder",
    version = "=1.5.0",
)

crate.spec(
    package = "flate2",
    version = "=1.1.2",
)

crate.spec(
    package = "tokio",
    version = "=1.47.0",
)

crate.spec(
    package = "scryer-prolog",
    version = "=0.9.4",
    default_features = False,
    features = ["repl", "hostname"],
)

crate.annotation(
    crate = "scryer-prolog",
    additive_build_file = "//third_party/rust:scryer-prolog.BUILD.bazel",
    extra_aliased_targets = {"scryer_prolog_bin": "bin"},
)

crate.from_specs()

use_repo(crate, "crates")
