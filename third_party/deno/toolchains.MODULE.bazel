http_archive = use_repo_rule("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

BUILD_FILE_CONTENT = """
filegroup(
    name = "{repo_name}",
    srcs = ["{deno}"],
    visibility = ["//visibility:public"],
)
"""

http_archive(
    name = "deno_darwin_aarch64",
    urls = ["https://github.com/denoland/deno/releases/download/v2.5.0/deno-aarch64-apple-darwin.zip"],
    sha256 = "dcc5f190ed80f021a9766ffd3ec9379d3b877752e18606cc30f7d2a07066798b",
    build_file_content = BUILD_FILE_CONTENT.format(repo_name = "deno_darwin_aarch64", deno = "deno"),
)

http_archive(
    name = "deno_linux_x86_64",
    urls = ["https://github.com/denoland/deno/releases/download/v2.5.0/deno-x86_64-unknown-linux-gnu.zip"],
    sha256 = "4561adb06b13f287a3785276cb29f377b7ffb49d54290178223b037e161446d3",
    build_file_content = BUILD_FILE_CONTENT.format(repo_name = "deno_linux_x86_64", deno = "deno"),
)

http_archive(
    name = "deno_linux_aarch64",
    urls = ["https://github.com/denoland/deno/releases/download/v2.5.0/deno-aarch64-unknown-linux-gnu.zip"],
    sha256 = "81d2ef446954429f0dcbcb24cdce115e5bb2c3a3548b79c01b49ec959682ac9b",
    build_file_content = BUILD_FILE_CONTENT.format(repo_name = "deno_linux_aarch64", deno = "deno"),
)

http_archive(
    name = "deno_windows_x86_64",
    urls = ["https://github.com/denoland/deno/releases/download/v2.5.0/deno-x86_64-pc-windows-msvc.zip"],
    sha256 = "efbbdcdf4b97e89c13bfab1b52e259fbaf73a38ccdca4f132ecb6a500de06f6d",
    build_file_content = BUILD_FILE_CONTENT.format(repo_name = "deno_windows_x86_64", deno = "deno.exe"),
)

register_toolchains("//third_party/deno:all")

resolved = use_repo_rule("@toolchain_utils//toolchain/resolved:defs.bzl", "toolchain_resolved")

resolved(
    name = "resolved-deno",
    toolchain_type = "//third_party/deno:toolchain_type",
)

deno = use_extension("//third_party/deno:extension.bzl", "deno")

deno.install(
    lock = "//:deno.lock",
    config = "//:deno.jsonc",
)

use_repo(deno, "deno")
