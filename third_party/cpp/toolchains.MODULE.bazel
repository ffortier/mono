bazel_dep(name = "toolchains_llvm", version = "1.5.0")
bazel_dep(name = "rules_cc", version = "0.2.11")

# Fixes https://github.com/bazel-contrib/toolchains_llvm/issues/547
git_override(
    module_name = "toolchains_llvm",
    remote = "https://github.com/bazel-contrib/toolchains_llvm",
    commit = "cebf1ed19db1521bcaae489a40dd736d50e9302f",
)

llvm = use_extension("@toolchains_llvm//toolchain/extensions:llvm.bzl", "llvm")

llvm.toolchain(
    llvm_version = "20.1.1",
    stdlib = {
        "wasm32": "none",
    },
    cxx_standard = {
        "": "c++20",
    },
    compile_flags = {
        "wasm32": [
            "--target=wasm32-unknown-unknown",
            "-nostdlib",
            "-nostdinc",
            "-fcolor-diagnostics",
            "-Wall",
            "-Wthread-safety",
            "-Wself-assign",
        ],
    },
)

llvm.sysroot(
    label = "@sysroots_bullseye_amd64//:sysroot",
    targets = ["linux-x86_64"],
)

llvm.sysroot(
    label = "@sysroots_bullseye_arm64//:sysroot",
    targets = ["linux-aarch64"],
)

llvm.sysroot(
    label = "@sysroot_darwin_universal//:sysroot",
    targets = ["darwin-x86_64", "darwin-aarch64"],
)

llvm.sysroot(
    label = "@//third_party/cpp/empty",
    targets = ["wasm32"],
)

llvm.toolchain(
    name = "llvm_rbe_linux_amd64",
    exec_os = "linux",
    exec_arch = "amd64",
    distribution = "LLVM-20.1.1-Linux-X64.tar.xz",
    llvm_version = "20.1.1",
    stdlib = {
        "wasm32": "none",
    },
    cxx_standard = {
        "": "c++20",
    },
    compile_flags = {
        "wasm32": [
            "--target=wasm32-unknown-unknown",
            "-nostdlib",
            "-nostdinc",
            "-fcolor-diagnostics",
            "-Wall",
            "-Wthread-safety",
            "-Wself-assign",
        ],
    },
)

llvm.sysroot(
    name = "llvm_rbe_linux_amd64",
    label = "@sysroots_bullseye_amd64//:sysroot",
    targets = ["linux-x86_64"],
)

llvm.sysroot(
    name = "llvm_rbe_linux_amd64",
    label = "@//third_party/cpp/empty",
    targets = ["wasm32", "wasm64"],
)

use_repo(llvm, "llvm_toolchain", "llvm_toolchain_llvm", "llvm_rbe_linux_amd64", "llvm_rbe_linux_amd64_llvm")

register_toolchains("@llvm_toolchain//:all", "//third_party/cpp:all")

sysroots = use_extension("//third_party/cpp:sysroots.bzl", "sysroots")

sysroots.install(
    targets = ["bullseye_amd64", "bullseye_arm64"],
)

use_repo(sysroots, "sysroots_bullseye_amd64", "sysroots_bullseye_arm64", "sysroot_darwin_universal")

bazel_dep(name = "hedron_compile_commands")

git_override(
    module_name = "hedron_compile_commands",
    remote = "https://github.com/hedronvision/bazel-compile-commands-extractor.git",
    commit = "abb61a688167623088f8768cc9264798df6a9d10",
)
